select(wd, wind_direction_cardinal, wd_cardinal)
df_2 <-
df_1 %>%
# head(500) %>%
filter(
wind_direction_cardinal %in% c("NW", "SE"),
# wd_cardinal %in% c("S", "SW", "SE"),
# adverse_flight_count > 5,
ws > 6,
temp_manifold > 10,
# rh_manifold > 70,
# ws < 12
) %>%
mutate(
x_var = adverse_flight_count,
y_var = co.ML
)
# select(x_var, y_var)
#
df_2 %>%
ggplot(mapping = aes(
x = x_var,
y = y_var,
color = rh_manifold,
size = rh_manifold
)) +
geom_point() +
# geom_col()
# geom_line()
geom_smooth(method=lm) +
scale_color_viridis_c() +
labs(
x = "Adverse Flights",
y = "CO"
)
#
mylm <- df_2 %>%
lm(y_var ~ x_var, .)
print(mylm)
inter <- mylm[[1]]
slope <- mylm[[2]]
r2 <- summary(mylm)$r.squared
print(r2)
df_2 <-
df_1 %>%
# head(500) %>%
filter(
wind_direction_cardinal %in% c("NW", "SE"),
# wd_cardinal %in% c("S", "SW", "SE"),
# adverse_flight_count > 5,
ws > 6,
temp_manifold > 10,
# rh_manifold > 70,
# ws < 12
) %>%
mutate(
# x_var = adverse_flight_count,
x_var = count,
y_var = co.ML
)
# select(x_var, y_var)
#
df_2 %>%
ggplot(mapping = aes(
x = x_var,
y = y_var,
color = rh_manifold,
size = rh_manifold
)) +
geom_point() +
# geom_col()
# geom_line()
geom_smooth(method=lm) +
scale_color_viridis_c() +
labs(
x = "Adverse Flights",
y = "CO"
)
#
mylm <- df_2 %>%
lm(y_var ~ x_var, .)
print(mylm)
inter <- mylm[[1]]
slope <- mylm[[2]]
r2 <- summary(mylm)$r.squared
print(r2)
df_2 <-
df_1 %>%
# head(500) %>%
filter(
wind_direction_cardinal %in% c("NW", "SE"),
# wd_cardinal %in% c("S", "SW", "SE"),
# adverse_flight_count > 5,
ws > 6,
temp_manifold > 10,
# rh_manifold > 70,
# ws < 12
) %>%
mutate(
x_var = adverse_flight_count,
# x_var = count,
y_var = co.ML
)
# select(x_var, y_var)
#
df_2 %>%
ggplot(mapping = aes(
x = x_var,
y = y_var,
color = rh_manifold,
size = rh_manifold
)) +
geom_point() +
# geom_col()
# geom_line()
geom_smooth(method=lm) +
scale_color_viridis_c() +
labs(
x = "Adverse Flights",
y = "CO"
)
#
mylm <- df_2 %>%
lm(y_var ~ x_var, .)
print(mylm)
inter <- mylm[[1]]
slope <- mylm[[2]]
r2 <- summary(mylm)$r.squared
print(r2)
df_2 <-
df_1 %>%
# head(500) %>%
filter(
wind_direction_cardinal %in% c("NW", "SE"),
# wd_cardinal %in% c("S", "SW", "SE"),
# adverse_flight_count > 5,
ws > 6,
temp_manifold > 10,
# rh_manifold > 70,
# ws < 12
) %>%
mutate(
# x_var = adverse_flight_count,
x_var = count,
y_var = co.ML
)
# select(x_var, y_var)
#
df_2 %>%
ggplot(mapping = aes(
x = x_var,
y = y_var,
color = rh_manifold,
size = rh_manifold
)) +
geom_point() +
# geom_col()
# geom_line()
geom_smooth(method=lm) +
scale_color_viridis_c() +
labs(
x = "Adverse Flights",
y = "CO"
)
#
mylm <- df_2 %>%
lm(y_var ~ x_var, .)
print(mylm)
inter <- mylm[[1]]
slope <- mylm[[2]]
r2 <- summary(mylm)$r.squared
print(r2)
pi
e
exp(1)
Value <- c(pi, exp(1), sqrt(5) / 2, sqrt(2))
Value <- c(pi, exp(1), (1 + sqrt(5)) / 2, sqrt(2))
Value <- c(pi, exp(1), (1 + sqrt(5)) / 2, sqrt(2));
Name <- c("π", "e", "ψ", "√2");
Value <- c(pi, exp(1), (1 + sqrt(5)) / 2, sqrt(2))
Name <- c("π", "e", "ψ", "√2")
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point()
tibble(Name, Value)
df <- as.data.frame.data.frame(Name, Value)
df <- as.data.frame(Name, Value)
View(df)
df <- tibble(Name, Value)
library(tidyverse)
df <- tibble(Value = c(pi, exp(1), (1 + sqrt(5)) / 2, sqrt(2)), Name = c("π", "e", "ψ", "√2"))
library(tidyverse)
df <- tibble(Value = c(pi, exp(1), (1 + sqrt(5)) / 2, sqrt(2)), Name = c("π", "e", "ψ", "√2"))
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point()
View(df)
df <- tibble(Name = c("π", "e", "ψ", "√2"), Value = c(pi, exp(1), (1 + sqrt(5)) / 2, sqrt(2)))
View(df)
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point()
df %>%
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point()
df <- tibble(Name = c("pi", "e", "psi", "sqrt2"), Value = c(pi, exp(1), (1 + sqrt(5)) / 2, sqrt(2)))
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2") %>%
rev()
)
) %>%
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point()
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2") %>%
rev()
)
) %>%
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point() +
ylim(0, 4)
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2")
)
) %>%
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point() +
ylim(0, 4)
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2")
)
) %>%
mutate(vertical_stack = c(0, 1, 0, 1)) %>%
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point()
ylim(0, 4)
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2")
)
) %>%
mutate(vertical_stack = c(0, 1, 0, 1)) %>%
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point() +
facet_grid(vertical_stack ~ 1, scales = "free_x")
ylim(0, 4)
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2")
)
) %>%
mutate(vertical_stack = c(0, 1, 0, 1)) %>%
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point() +
facet_grid(vertical_stack ~ 1, scales = "free_x") +
ylim(0, 4)
source("~/Olin/Tell The Story/Infographic/dataPoints.R")
# scatterplot
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2")
)
) %>%
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point() +
ylim(0, 4)
ggsave("figures/scatterplot.svg", width = image_width, height = image_height)
# scatterplot
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2")
)
) %>%
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point() +
ylim(0, 4)
ggsave("./figures/scatterplot.svg", width = image_width, height = image_height)
# scatterplot
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2")
)
) %>%
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point() +
ylim(0, 4)
# ggsave("./figures/scatterplot.svg", width = image_width, height = image_height)
ggsave("C:/Users/ieykamp/OneDrive - Olin College of Engineering/Documents/Olin/Tell The Story/Infographic/figures", width = image_width, height = image_height)
# scatterplot
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2")
)
) %>%
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point() +
ylim(0, 4)
# ggsave("./figures/scatterplot.svg", width = image_width, height = image_height)
ggsave("C:/Users/ieykamp/OneDrive - Olin College of Engineering/Documents/Olin/Tell The Story/Infographic/figures/scatterplot.svg", width = image_width, height = image_height)
# non-aligned axes
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2")
)
) %>%
mutate(vertical_stack = c(0, 1, 0, 1)) %>%
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point() +
facet_grid(vertical_stack ~ 1, scales = "free_x") +
ylim(0, 4)
ggsave("figures/non_aligned.svg", width = image_width, height = image_height)
# non-aligned axes
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2")
)
) %>%
mutate(vertical_stack = c(0, 1, 0, 1)) %>%
ggplot(mapping = aes(x = Name, y = Value)) +
geom_point() +
facet_grid(vertical_stack ~ 1, scales = "free_x") +
ylim(0, 4)
# Pie chart
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2")
)
) %>%
ggplot(mapping = aes(x = "", y = Value, fill = Name)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
# geom_point() +
facet_grid( ~ Name) +
ylim(0, 8)
ggsave("figures/angular.svg", width = image_width, height = image_height)
# df <- tibble(Name = c("one", "two", "three", "four", "five", "pi", "e", "psi", "sqrt2"), Value = c(1, 2, 3, 4, 5, pi, exp(1), (1 + sqrt(5)) / 2, sqrt(2)))
df <- tibble(Name = c("pi", "e", "psi", "sqrt2"), Value = c(pi, exp(1), (1 + sqrt(5)) / 2, sqrt(2)))
source("~/Olin/Tell The Story/Infographic/dataPoints.R")
df <- tibble(Name = c("one", "two", "three", "four", "five", "pi", "e", "psi", "sqrt2"), Value = c(1, 2, 3, 4, 5, pi, exp(1), (1 + sqrt(5)) / 2, sqrt(2)))
# df <- tibble(Name = c("pi", "e", "psi", "sqrt2"), Value = c(pi, exp(1), (1 + sqrt(5)) / 2, sqrt(2)))
# saturation
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2")
)
) %>%
ggplot(mapping = aes(x = Name, y = 0, fill = Value)) +
geom_tile()
ggsave("figures/saturation1.svg", width = image_width, height = image_height)
df <- tibble(Name = c("one", "two", "three", "pi", "e", "psi", "sqrt2"), Value = c(1, 2, 3, pi, exp(1), (1 + sqrt(5)) / 2, sqrt(2)))
# df <- tibble(Name = c("pi", "e", "psi", "sqrt2"), Value = c(pi, exp(1), (1 + sqrt(5)) / 2, sqrt(2)))
# saturation
df %>%
mutate(
Name = fct_relevel(
Name,
c("e", "psi", "pi", "sqrt2")
)
) %>%
ggplot(mapping = aes(x = Name, y = 0, fill = Value)) +
geom_tile()
ggsave("figures/saturation1.svg", width = image_width, height = image_height)
# Load packages
library(sf)
#> Linking to GEOS 3.9.0, GDAL 3.2.1, PROJ 7.2.1
library(mapview)
library(spdep)
#> Loading required package: sp
#> Loading required package: spData
#> To access larger datasets in this package, install the spDataLarge
#> package with: `install.packages('spDataLarge',
#> repos='https://nowosad.github.io/drat/', type='source')`
# data
cuencas <- st_read("raw_data/vtds_22p/VTDs_22P.shp")
#> Reading layer `Cuencas_Disponibilidad_2020' from data source
#>   `C:\Users\Utente\Desktop\Cuencas_Disponibilidad_2020\Cuencas_Disponibilidad_2020.shp'
#>   using driver `ESRI Shapefile'
#> Simple feature collection with 757 features and 11 fields
#> Geometry type: MULTIPOLYGON
#> Dimension:     XY
#> Bounding box:  xmin: 1071153 ymin: 319366.3 xmax: 4074870 ymax: 2349614
#> Projected CRS: CCL_ITRF_1992
# display data
mapview(cuencas)
# data
cuencas <- st_read("raw_data/vtds_22p/VTDs_22P.shp")
#> Reading layer `Cuencas_Disponibilidad_2020' from data source
#>   `C:\Users\Utente\Desktop\Cuencas_Disponibilidad_2020\Cuencas_Disponibilidad_2020.shp'
#>   using driver `ESRI Shapefile'
#> Simple feature collection with 757 features and 11 fields
#> Geometry type: MULTIPOLYGON
#> Dimension:     XY
#> Bounding box:  xmin: 1071153 ymin: 319366.3 xmax: 4074870 ymax: 2349614
#> Projected CRS: CCL_ITRF_1992
setwd("C:/dev/git/Gerrymander")
# data
cuencas <- st_read("raw_data/vtds_22p/VTDs_22P.shp")
#> Reading layer `Cuencas_Disponibilidad_2020' from data source
#>   `C:\Users\Utente\Desktop\Cuencas_Disponibilidad_2020\Cuencas_Disponibilidad_2020.shp'
#>   using driver `ESRI Shapefile'
#> Simple feature collection with 757 features and 11 fields
#> Geometry type: MULTIPOLYGON
#> Dimension:     XY
#> Bounding box:  xmin: 1071153 ymin: 319366.3 xmax: 4074870 ymax: 2349614
#> Projected CRS: CCL_ITRF_1992
# display data
mapview(cuencas)
# estimate first order adjacency matrix
cuencas_mat <- nb2mat(poly2nb(cuencas), style = "B")
cuencas_mat[1:10, 1:10]
?poly2nb
# Load packages
library(sf)
library(mapview)
library(spdep)
library(igraph)
edges <- get.edgelist(cuencas_mat)
my_graph <- graph.adjacency(x)
edges <- get.edgelist(my_graph)
my_graph <- graph.adjacency(cuencas_mat)
edges <- get.edgelist(my_graph)
View(edges)
View(cuencas)
# Load packages
library(sf)
library(mapview)
library(spdep)
library(igraph)
# data
district_outlines <- st_read("raw_data/vtds_22p/VTDs_22P.shp")
# display data
mapview(district_outlines)
# estimate first order adjacency matrix
district_adjacency_mat <- nb2mat(poly2nb(district_outlines), style = "B")
district_adjacency_mat[1:10, 1:10]
district_graph <- graph.adjacency(district_adjacency_mat)
district_edge_list <- get.edgelist(district_graph)
save(district_edge_list, file = "district_edge_list.Rdata")
load("C:/dev/git/Gerrymander/district_edge_list.Rdata")
write.csv(district_edge_list, file = "district_edge_list.csv")
election_raw <- read.csv("2020_general_election_data/president.csv")
View(election_raw)
election_raw <- read.csv("2020_general_election_data/president.csv")
voter_reg_raw <- read.csv("2020_general_election_data/voter data.csv")
View(voter_reg_raw)
View(election_raw)
election <-
election_raw %>%
select(VDTKEY, Biden = BidenD_20G_President, Trump = TrumpR_20G_President) %>%
left_join(voter_reg_raw, by = c("VDTKEY" = "VDTKEY"))
election <-
election_raw %>%
select(VDTKEY, Biden = BidenD_20G_President, Trump = TrumpR_20G_President)
library(tidyverse)
election <-
election_raw %>%
select(VDTKEY, Biden = BidenD_20G_President, Trump = TrumpR_20G_President)
election <-
election_raw %>%
select(VDTKEY, Biden = BidenD_20G_President, Trump = TrumpR_20G_President)
election <-
election_raw %>%
select(VTDKEY, Biden = BidenD_20G_President, Trump = TrumpR_20G_President)
View(election)
election <-
election_raw %>%
select(VTDKEY, Biden = BidenD_20G_President, Trump = TrumpR_20G_President) %>%
left_join(voter_reg_raw, by = c("VTDKEY" = "VTDKEY"))
View(election)
election <-
election_raw %>%
select(VTDKEY, Biden = BidenD_20G_President, Trump = TrumpR_20G_President) %>%
left_join(voter_reg_raw %>% select(VTDKEY, Voter_Registration, Turnout), by = c("VTDKEY" = "VTDKEY"))
View(election)
election <-
election_raw %>%
select(VTDKEY, Biden = BidenD_20G_President, Trump = TrumpR_20G_President) %>%
left_join(
voter_reg_raw %>%
select(VTDKEY, Voter_Registration, Turnout),
by = c("VTDKEY" = "VTDKEY")
)
View(election)
